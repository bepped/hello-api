name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  test:
    needs:
      - format-check
    name: Test Application
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Downloads
      run:  go get -t ./...
    - name: Runt Test
      run: make test
    - name: Coverage Check
      run: make coverage
    - name: Generate Report
      run: make report
    - name: Copy Files
      run: |
          mkdir reports
          cp cover.html reports/.

    - name: Archive
      uses: actions/upload-artifact@v3
      with:
          name: reports
          path: reports1
  format-check:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Run Format Check
      run: make check-format

  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Download binary
      uses: actions/download-artifact@v3
      with: 
          name: api
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Still in experimentation phase
          draft: true
          prerelease: true
    - name: Upload Release binary
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: 
            ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url:
            ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream   
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs:  test
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Build
      run: make build
    - name: Copy Files
      run:  |
            mkdir artifacts
            cp api artifacts/.
    - name: Archive
      uses: actions/upload-artifact@v3
      with:
          name: api 
          path: artifacts 
          

